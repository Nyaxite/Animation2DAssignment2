package managers{	import objects.Explosion;	import starling.core.Starling;	import starling.events.Event;	import starling.display.DisplayObjectContainer;	public class ExplosionManager	{		public var explosions:Array;		public var count:int = 0;		public var currentParent:DisplayObjectContainer;		public function ExplosionManager(currentParent:DisplayObjectContainer)		{			this.currentParent = currentParent;			explosions = new Array();		}		public function spawn(x:int, y:int):void		{			var explosion:Explosion = new Explosion();			explosions.push(explosion);			explosion.x = x;			explosion.y = y;			currentParent.addChild(explosion);			Starling.juggler.add(explosion);			explosion.addEventListener(Event.COMPLETE, onComplete);		}		private function onComplete(event:Event):void		{			var explosion:Explosion = event.currentTarget as Explosion;			Starling.juggler.remove(explosion);			destroyExplosion(explosion);		}		public function destroyExplosion(explosion:Explosion):void		{			var len:int = explosions.length;			for (var count:int=0; count<len; count++)			{				if (explosions[count] == explosion)				{					explosions.splice(count, 1);					explosion.removeFromParent(true);				}			}		}		public function destroy():void		{			explosions = null;		}	}}